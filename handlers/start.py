from aiogram import Router, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

# –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É –º–æ–≤–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ / Storing user language choices
user_languages = {}

def get_message(user_id, en_message, uk_message):
    language_code = user_languages.get(user_id, 'en')
    if language_code == 'uk':
        return uk_message
    return en_message

router = Router()

@router.message(Command('start'))
async def start_command(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data='language_uk')],
        [InlineKeyboardButton(text="üá¨üáß English", callback_data='language_en')]
    ])
    await message.answer("–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / Choose a language:", reply_markup=keyboard)

@router.callback_query(lambda c: c.data and c.data.startswith('language_'))
async def process_language_choice(callback_query: types.CallbackQuery):
    language_code = callback_query.data.split('_')[-1]
    user_id = callback_query.from_user.id
    user_languages[user_id] = language_code

    if language_code == 'uk':
        await callback_query.message.answer("–ú–æ–≤—É –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É.")
    else:
        await callback_query.message.answer("Language changed to English.")

    # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –º–µ–Ω—é –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É –º–æ–≤–∏ / Send menu after language selection
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=get_message(user_id, "Top Queries Hour", "–¢–æ–ø –∑–∞–ø–∏—Ç–∏ –∑–∞ –≥–æ–¥–∏–Ω—É"), callback_data='top_queries_hour')],
        [InlineKeyboardButton(text=get_message(user_id, "Top Queries Day", "–¢–æ–ø –∑–∞–ø–∏—Ç–∏ –∑–∞ –¥–µ–Ω—å"), callback_data='top_queries_day')],
        [InlineKeyboardButton(text=get_message(user_id, "Top Queries Week", "–¢–æ–ø –∑–∞–ø–∏—Ç–∏ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å"), callback_data='top_queries_week')],
        [InlineKeyboardButton(text=get_message(user_id, "Top Queries Month", "–¢–æ–ø –∑–∞–ø–∏—Ç–∏ –∑–∞ –º—ñ—Å—è—Ü—å"), callback_data='top_queries_month')],
        [InlineKeyboardButton(text=get_message(user_id, "Shorts Trend", "–¢—Ä–µ–Ω–¥–∏ —à–æ—Ä—Ç—ñ–≤"), callback_data='shorts_trend')]
    ])
    await callback_query.message.answer(get_message(user_id,
                            "Select one of the commands or enter a search query:",
                            "–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç:"), reply_markup=keyboard)

def register_start_handlers(dp):
    dp.include_router(router)
